#include <bits/stdc++.h>

// 打印十进制整型的二进制表示
// 调用库函数
void show_bin(int value)
{
    char string[33]; // 形参类型uint32最大为32位，因此这里定义了大小为33的字符串数组存放
    itoa(value, string, 2);
    printf("%s\n", string);
}

int main()
{
    /* 位运算技巧 */

    // 1. 判断奇偶      x & 1
    int v1 = 10;
    std::cout << (v1 & 1 ? "odd" : "even") << std::endl;
    std::cout << "------------------------------------------ 2\n";

    // 2. 获取二进制数的某一位      x >> i & 1
    int v2 = 0b10001101;
    for (int i = 0; i < 8; ++i)
    {
        std::cout << (v2 >> i & 1) << ' ';
    }
    std::cout << std::endl;
    std::cout << "------------------------------------------ 3\n";

    // 3. 修改二进制的某一位为 1    x | (1 << i)
    // 修改二进制的某一位为 0       x & ~(1 << i)
    int v3 = 0b00000000;
    for (int i = 0; i < 8; ++i)
    {
        show_bin(v3 | (1 << i));
    }
    std::cout << "------------------------------------------ 4\n";

    // 快速判断一个数是否是 2 的幂  x & (x - 1)
    // 若一个数为 2 的幂，则这个数的二进制表示只有一个 1，x - 1 除了高位不为一以外其他位均为 1，两者做与运算一定为 0
    int v4 = 1024;
    std::cout << (!(v4 & (v4 - 1)) ? "Yes" : "No") << std::endl;
    std::cout << "------------------------------------------ 5\n";

    // 获取二进制位中最低位的 1 (lowbit)    x & -x
    int v5 = 0b00010010;
    show_bin(v5 & -v5); // 00000010


    return 0;
}